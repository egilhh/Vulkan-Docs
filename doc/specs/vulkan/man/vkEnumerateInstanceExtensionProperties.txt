vkEnumerateInstanceExtensionProperties(3)
=========================================

Name
----
vkEnumerateInstanceExtensionProperties - Returns up to requested number of global extension properties.

C Specification
---------------

include::../protos/vkEnumerateInstanceExtensionProperties.txt[]

Parameters
----------

pname:pLayerName::
    Pointer to optional layer name. If not null, will only return extension
    properties for the requested layer.

pname:pPropertyCount::
    Pointer to count indicating space available on input and structures
    returned on output.

pname:pProperties::
    Pointer to a data structure to receive the results.

Description
-----------

fname:vkEnumerateInstanceExtensionProperties retrieves properties for global
extensions of the loader or the optionally specified layer.
pname:pProperties points to an array of sname:VkExtensionProperties where
the return data will be stored. If NULL,
fname:vkEnumerateInstanceExtensionProperties will update the count with the
number of global extensions found. pname:pPropertyCount must point to a
count indicating the number of sname:VkExtensionProperties structures
available. The definition of slink:VkExtensionProperties is as follows:

include::../structs/VkExtensionProperties.txt[]

include::../validity/protos/vkEnumerateInstanceExtensionProperties.txt[]

Return Value
------------

Upon success, fname:vkEnumerateInstanceExtensionProperties returns ename:VK_SUCCESS or ename:VK_INCOMPLETE.
ename:VK_INCOMPLETE indicates that the number of extension properties found exceeds the given count. An app
will need to call again with a larger array and count to get all available extension properties.
The number of available extensions could change from one call to the next if an application
updates or installs Vulkan components.

See Also
--------

flink:vkEnumerateInstanceLayerProperties, flink:vkCreateInstance

include::footer.txt[]
