VkMemoryPropertyFlags(3)
========================

Name
----
VkMemoryPropertyFlags - Memory pool properties.

C Specification
---------------

include::../enums/VkMemoryPropertyFlagBits.txt[]
include::../flags/VkMemoryPropertyFlags.txt[]

Constants
---------

ename:VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT::
    Identifies a memory pool that is the most efficient for device access.

ename:VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT::
    Identifies a memory pool that can be mapped into host memory address
    space and thus is accessible by the host.

ename:VK_MEMORY_PROPERTY_HOST_COHERENT_BIT::
    Identifies a memory pool where accesses between the host and the
    coherency domain are coherent. Memory without this property requires
    explicit use of flink:vkFlushMappedMemoryRanges after host writes to
    this type of memory, and use of flink:vkInvalidateMappedMemoryRanges
    before host reads from that memory.

ename:VK_MEMORY_PROPERTY_HOST_CACHED_BIT::
    Identifies memory that is cached by the host.

ename:VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT::
    Identifies memory where an object's backing may be provided lazily
    (when needed) by the implementation.

Description
-----------

These flags are used in the slink:VkMemoryAllocateInfo structure passed as parameter to flink:vkAllocateMemory
to define the properties of the memory pool the memory object should be allocated from.

Additionally, when querying the memory requirements of objects using
flink:vkGetBufferMemoryRequirements or flink:vkGetImageMemoryRequirements,
the ptext:memoryTypeBits member returned in the slink:VkMemoryRequirements
structure takes its values from these set of flags.

See Also
--------

slink:VkMemoryAllocateInfo, flink:vkAllocateMemory, slink:VkMemoryRequirements

include::footer.txt[]
